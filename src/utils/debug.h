// Code adapted from http://www.c.learncodethehardway.org/book/ex20.html
// Original Author: Zed Shaw
// Edited by : ToraNova chia_jason96@live.com
// Edit as of 2020 Mar 22, only the DEBUG flag stands, no AUTONL anymore
// those are left to the user. EWLOG and DEBUG are now controlled by autotools

#ifndef _DEBUG_H_
#define _DEBUG_H_

#ifdef __cplusplus
extern "C"{
#endif

#include <stdio.h>
#include <errno.h>
#include <string.h>
//added configuration generated by autotools
//contains EWLOG defines and DEBUG
// configure with the following line to allow debugging
// ../configure CPPFLAGS=-DDEBUG CFLAGS="-g -O0"
// As of Jul 03 2020, now with an easier approach
// ../configure --enable-debug
// ../configure --disable-ewlog
#include "config.h"

#define clean_errno() (errno == 0 ? "None" : strerror(errno))

//debug -- print debugs messages
//debugn - print debugs and newlines after

#ifdef DEBUG //main block---------------------
    #define debug(M, ...) fprintf(stdout, "[DEBUG] (%s:%s:L%d): " M, __FILE__, __FUNCTION__, __LINE__, ##__VA_ARGS__)
    #define debugn(M, ...) fprintf(stdout, "[DEBUG] (%s:%s:L%d): " M "\n", __FILE__, __FUNCTION__, __LINE__, ##__VA_ARGS__)
#else
    //dummy defines
    #define debug(M, ...) ((void)0)
    #define debugn(M, ...) ((void)0)
#endif //end main debug block

// lerror - log error
// lwarn - log warning
#ifdef EWLOG
	#define lerror(M, ...) fprintf(stderr, "[ERROR] (%s:%s:L%d: errno: %s) " M, __FILE__, __FUNCTION__, __LINE__, clean_errno(), ##__VA_ARGS__)
	#define lwarn(M, ...) fprintf(stdout, "[WARN] (%s:%s:L%d) " M, __FILE__, __FUNCTION__, __LINE__, ##__VA_ARGS__)
#else
    //dummy defines
    #define lerror(M, ...) ((void)0)
    #define lwarn(M, ...) ((void)0)
#endif //end main logging block

#ifdef __cplusplus
};
#endif

#endif
